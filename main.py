import discord
from discord.ext import commands
from discord import app_commands
import asyncio
import os
from dotenv import load_dotenv
from parser import Parser
from tools import Tools

load_dotenv()

class SquadBot(commands.Bot):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        super().__init__(command_prefix='!', intents=intents)
        
    async def setup_hook(self):
        await self.tree.sync()
        print(f"Synced slash commands for {self.user}")
        
    async def on_ready(self):
        print(f'{self.user} has connected to Discord!')

bot = SquadBot()

@bot.tree.command(name="top", description="–¢–æ–ø 100 –æ–Ω–ª–∞–π–Ω –∑–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å (–Ω—ñ–∫ + —á–∞—Å)")
async def top_command(interaction: discord.Interaction):
    await handle_top_command(interaction, is_current_month=True, is_admin=False)

@bot.tree.command(name="topad", description="–¢–æ–ø 100 –æ–Ω–ª–∞–π–Ω –∑–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å (–Ω—ñ–∫ + —á–∞—Å + SteamID)")
async def top_admin_command(interaction: discord.Interaction):
    await handle_top_command(interaction, is_current_month=True, is_admin=True)

@bot.tree.command(name="toppr", description="–¢–æ–ø 100 –æ–Ω–ª–∞–π–Ω –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å (–Ω—ñ–∫ + —á–∞—Å + SteamID)")
async def top_previous_month_command(interaction: discord.Interaction):
    await handle_top_command(interaction, is_current_month=False, is_admin=True)

async def handle_top_command(interaction: discord.Interaction, is_current_month: bool, is_admin: bool):
    # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –≤—ñ–¥—Ä–∞–∑—É, —â–æ –ø–æ—á–∏–Ω–∞—î–º–æ –æ–±—Ä–æ–±–∫—É
    await interaction.response.send_message("üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –¥–∞–Ω—ñ...", ephemeral=True)
    
    try:
        parser = Parser()
        players_list = await parser.fetch_and_parse_leaderboard(is_admin, is_current_month)
        
        if not players_list:
            await interaction.edit_original_response(content="‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
            return
        
        leaderboard_message = ""
        for i, player in enumerate(players_list):
            line = f"{i + 1}. **{player.name}**: {Tools.format_time(player.value)}"
            if is_admin:
                line += f" ‚Äî {player.steam_id}"
            leaderboard_message += line + "\n"
            
            # –û–±–º–µ–∂—É—î–º–æ –¥–æ–≤–∂–∏–Ω—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Discord (–º–∞–∫—Å 4096 —Å–∏–º–≤–æ–ª—ñ–≤ –≤ embed description)
            if len(leaderboard_message) > 3900:
                leaderboard_message += "... (–ø–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä—à—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏)"
                break
        
        embed = discord.Embed(
            title="Top 100 Online ‚Äî SQUAD UKRAINE",
            description=leaderboard_message,
            color=discord.Color.blue()
        )
        
        # –†–µ–¥–∞–≥—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await interaction.edit_original_response(content=None, embed=embed)
        
    except Exception as e:
        print(f"Error in top command: {e}")
        await interaction.edit_original_response(content="‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

async def main():
    token = os.getenv('TOKEN_BOT')
    if not token:
        raise ValueError("TOKEN_BOT –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
    
    async with bot:
        await bot.start(token)

if __name__ == "__main__":
    asyncio.run(main())
